{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1-oRijAoUwpp2Qlz-Kl3k6hNlodWQyf87","timestamp":1720469756766}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"37puETfgRzzg"},"source":["# Data Preprocessing Tools"]},{"cell_type":"markdown","metadata":{"id":"EoRP98MpR-qj"},"source":["## Importing the libraries"]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import pandas as pd"],"metadata":{"id":"PdsW_Gc0_zJc","executionInfo":{"status":"ok","timestamp":1720623050869,"user_tz":-180,"elapsed":314,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}}},"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RopL7tUZSQkT"},"source":["## Importing the dataset"]},{"cell_type":"code","source":["dataset = pd.read_csv('Data.csv')\n","x = dataset.iloc[:, :-1].values\n","y = dataset.iloc[:, -1].values"],"metadata":{"id":"RzwL9Ol0AsC3","executionInfo":{"status":"ok","timestamp":1720623052800,"user_tz":-180,"elapsed":355,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["x is defined here as independent variable. y is the dependent variable. the \":\" expression we use when defining x and y means that we will use all lines. the expression \":-1\" that we use when defining x means that we use all columns except the last column, and the expression \"-1\" that we use when defining y means that we use only the last column."],"metadata":{"id":"ZUVjHMQaEHBE"}},{"cell_type":"code","source":["print(x)"],"metadata":{"id":"LEKLNwFnE-5q","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1720623055744,"user_tz":-180,"elapsed":321,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}},"outputId":"9c1a5279-e6fa-4ec8-8330-e641488682d5"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["[['France' 44.0 72000.0]\n"," ['Spain' 27.0 48000.0]\n"," ['Germany' 30.0 54000.0]\n"," ['Spain' 38.0 61000.0]\n"," ['Germany' 40.0 nan]\n"," ['France' 35.0 58000.0]\n"," ['Spain' nan 52000.0]\n"," ['France' 48.0 79000.0]\n"," ['Germany' 50.0 83000.0]\n"," ['France' 37.0 67000.0]]\n"]}]},{"cell_type":"code","source":["print(y)"],"metadata":{"id":"iFK69Y4VFCdS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1720623057588,"user_tz":-180,"elapsed":316,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}},"outputId":"46a16bbd-0bac-46a3-bdd0-de6b8e579139"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["['No' 'Yes' 'No' 'No' 'Yes' 'Yes' 'No' 'Yes' 'No' 'Yes']\n"]}]},{"cell_type":"markdown","metadata":{"id":"nhfKXNxlSabC"},"source":["## Taking care of missing data"]},{"cell_type":"code","source":["from sklearn.impute import SimpleImputer\n","imputer = SimpleImputer(missing_values=np.nan, strategy = 'mean')\n","imputer.fit(x[:, 1:3])\n","x[:, 1:3] = imputer.transform(x[:, 1:3])"],"metadata":{"id":"brbYp_yoCO4n","executionInfo":{"status":"ok","timestamp":1720623058877,"user_tz":-180,"elapsed":4,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["print(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-OtYcLJGErNJ","executionInfo":{"status":"ok","timestamp":1720623061036,"user_tz":-180,"elapsed":332,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}},"outputId":"de5a63ca-f8b2-49b5-c2d4-727db9ffd1d2"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["[['France' 44.0 72000.0]\n"," ['Spain' 27.0 48000.0]\n"," ['Germany' 30.0 54000.0]\n"," ['Spain' 38.0 61000.0]\n"," ['Germany' 40.0 63777.77777777778]\n"," ['France' 35.0 58000.0]\n"," ['Spain' 38.77777777777778 52000.0]\n"," ['France' 48.0 79000.0]\n"," ['Germany' 50.0 83000.0]\n"," ['France' 37.0 67000.0]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"CriG6VzVSjcK"},"source":["## Encoding categorical data"]},{"cell_type":"markdown","metadata":{"id":"AhSpdQWeSsFh"},"source":["### Encoding the Independent Variable"]},{"cell_type":"code","source":["from sklearn.compose import ColumnTransformer\n","from sklearn.preprocessing import OneHotEncoder\n","ct = ColumnTransformer(transformers = [('encoder', OneHotEncoder(), [0])], remainder = 'passthrough')\n","x = np.array(ct.fit_transform(x))"],"metadata":{"id":"S226-VIWdirF","executionInfo":{"status":"ok","timestamp":1720623062949,"user_tz":-180,"elapsed":370,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["print(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pf-IA4E7gIT0","executionInfo":{"status":"ok","timestamp":1720623064415,"user_tz":-180,"elapsed":315,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}},"outputId":"c814518b-1206-4a41-8fce-a8b8828f6d44"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1.0 0.0 0.0 44.0 72000.0]\n"," [0.0 0.0 1.0 27.0 48000.0]\n"," [0.0 1.0 0.0 30.0 54000.0]\n"," [0.0 0.0 1.0 38.0 61000.0]\n"," [0.0 1.0 0.0 40.0 63777.77777777778]\n"," [1.0 0.0 0.0 35.0 58000.0]\n"," [0.0 0.0 1.0 38.77777777777778 52000.0]\n"," [1.0 0.0 0.0 48.0 79000.0]\n"," [0.0 1.0 0.0 50.0 83000.0]\n"," [1.0 0.0 0.0 37.0 67000.0]]\n"]}]},{"cell_type":"markdown","source":["If there were 5 different countries, we would distinguish these countries with 5-digit binary codes. In the case of this table, there were 3 columns for 3 countries, the first being France, the second being Germany and the third being Spain. If the expressions 1.0 and 0.0 are thought of as true or false, if 1.0 is written in the first column, it is 'yes' or 'true' for the French option."],"metadata":{"id":"-Fs4voMOg2Dd"}},{"cell_type":"markdown","metadata":{"id":"DXh8oVSITIc6"},"source":["### Encoding the Dependent Variable"]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","le = LabelEncoder()\n","y = le.fit_transform(y)"],"metadata":{"id":"pr2OVcdMhna5","executionInfo":{"status":"ok","timestamp":1720623066848,"user_tz":-180,"elapsed":303,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["print(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3gfVE1PaiS8a","executionInfo":{"status":"ok","timestamp":1720623068334,"user_tz":-180,"elapsed":389,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}},"outputId":"4620cd2b-850f-419c-886e-8cf3840c3ac7"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1 0 0 1 1 0 1 0 1]\n"]}]},{"cell_type":"markdown","metadata":{"id":"qb_vcgm3qZKW"},"source":["## Splitting the dataset into the Training set and Test set"]},{"cell_type":"code","source":["from sklearn .model_selection import train_test_split\n","x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 1)"],"metadata":{"id":"QECL8X8JyGOy","executionInfo":{"status":"ok","timestamp":1720623071434,"user_tz":-180,"elapsed":332,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}}},"execution_count":12,"outputs":[]},{"cell_type":"markdown","source":["The recommended ratio for train and test data is train 80% and test 20%."],"metadata":{"id":"a8rxMjBX0Vf3"}},{"cell_type":"code","source":["print(x_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jpLuGuQcz7Wo","executionInfo":{"status":"ok","timestamp":1720623073708,"user_tz":-180,"elapsed":313,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}},"outputId":"0c8617b7-4bd9-4db4-d119-ce41b7d2cf59"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.0 0.0 1.0 38.77777777777778 52000.0]\n"," [0.0 1.0 0.0 40.0 63777.77777777778]\n"," [1.0 0.0 0.0 44.0 72000.0]\n"," [0.0 0.0 1.0 38.0 61000.0]\n"," [0.0 0.0 1.0 27.0 48000.0]\n"," [1.0 0.0 0.0 48.0 79000.0]\n"," [0.0 1.0 0.0 50.0 83000.0]\n"," [1.0 0.0 0.0 35.0 58000.0]]\n"]}]},{"cell_type":"code","source":["print(x_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pqdspQIaz7es","executionInfo":{"status":"ok","timestamp":1720623074913,"user_tz":-180,"elapsed":3,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}},"outputId":"fe3b907d-e994-44e0-9799-c014397b9cfe"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.0 1.0 0.0 30.0 54000.0]\n"," [1.0 0.0 0.0 37.0 67000.0]]\n"]}]},{"cell_type":"code","source":["print(y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aAaE3xpoz7mS","executionInfo":{"status":"ok","timestamp":1720623076171,"user_tz":-180,"elapsed":5,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}},"outputId":"8755b2c5-55e1-4420-e225-0b1b40f4a39a"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1 0 0 1 1 0 1]\n"]}]},{"cell_type":"code","source":["print(y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dwEjBh36z7s3","executionInfo":{"status":"ok","timestamp":1720623078233,"user_tz":-180,"elapsed":348,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}},"outputId":"622bba6c-3279-4cd7-c1e5-6b34d12a4f0d"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 1]\n"]}]},{"cell_type":"markdown","metadata":{"id":"TpGqbS4TqkIR"},"source":["## Feature Scaling"]},{"cell_type":"markdown","source":["normalisation is recommended when there is a normal distribution along features. standardisation works efficiently all the time."],"metadata":{"id":"3LggkrrGI6o4"}},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()\n","x_train[:, 3:] = sc.fit_transform(x_train[:, 3:])\n","x_test[:, 3:] = sc.transform(x_test[:, 3:])"],"metadata":{"id":"yq7xnjKNJ1Sr","executionInfo":{"status":"ok","timestamp":1720623080069,"user_tz":-180,"elapsed":326,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["print(x_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_18eoKK6H7Gk","executionInfo":{"status":"ok","timestamp":1720623083115,"user_tz":-180,"elapsed":334,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}},"outputId":"ec11d960-2586-4615-8f6a-3ec5e0ad8aa6"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.0 0.0 1.0 -0.19159184384578545 -1.0781259408412425]\n"," [0.0 1.0 0.0 -0.014117293757057777 -0.07013167641635372]\n"," [1.0 0.0 0.0 0.566708506533324 0.633562432710455]\n"," [0.0 0.0 1.0 -0.30453019390224867 -0.30786617274297867]\n"," [0.0 0.0 1.0 -1.9018011447007988 -1.420463615551582]\n"," [1.0 0.0 0.0 1.1475343068237058 1.232653363453549]\n"," [0.0 1.0 0.0 1.4379472069688968 1.5749910381638885]\n"," [1.0 0.0 0.0 -0.7401495441200351 -0.5646194287757332]]\n"]}]},{"cell_type":"code","source":["print(x_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J1xoV4CCH99B","executionInfo":{"status":"ok","timestamp":1720623087741,"user_tz":-180,"elapsed":305,"user":{"displayName":"Esma Yıldırım","userId":"07186147541942240903"}},"outputId":"3f8578b7-1a71-449d-87a1-c9a1896be8e8"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.0 1.0 0.0 -1.4661817944830124 -0.9069571034860727]\n"," [1.0 0.0 0.0 -0.44973664397484414 0.2056403393225306]]\n"]}]}]}